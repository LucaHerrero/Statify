<template>
    <div class="page" data-name="catalog">
        <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner sliding">
                <div class="title">Search</div>
                <div class="subnavbar">
                    <form class="searchbar">
                        <div class="searchbar-inner">
                            <div class="searchbar-input-wrap">
                                <input type="search" placeholder="Search" />
                                <i class="searchbar-icon"></i>
                                <span class="input-clear-button"></span>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="page-content">
            <div class="block chip-block">
                <div data-space-between="10" data-slides-per-view="auto" class="swiper-container swiper-init">
                    <div class="swiper-wrapper">
                        ${Object.keys(filter).map((item) => $h`
                        <div class="swiper-slide chip-slide">
                            <button
                                class="button button-round ${filter[item].active ? 'button-fill' : 'button-outline'}"
                                @click="${changeChip}">${filter[item].name}</button>
                        </div>
                        `)}
                    </div>
                </div>
            </div>

            ${contentLoading == true ? $h`
            <div class="block text-align-center">
                <div class="preloader color-multi"></div>
            </div>
            ` : $h ``}

            ${contentSpotify.tracks != undefined ? $h`
            <div class="block-title">Songs</div>
            <div class="list media-list">
                <ul>
                    ${contentSpotify.tracks.items.map((item) => $h`
                    <li>
                        <a href="#" class="item-link item-content">
                            <div class="item-media">
                                ${item.album.images.length > 0 ? $h`
                                <img src="${item.album.images[item.album.images.length -1].url}" class="track-cover" />
                                ` : $h`
                                <img src="./assets/icons/audiotrack_black_48dp.svg" width="45" />
                                `}
                            </div>
                            <div class="item-inner">
                                <div class="item-title-row">
                                    <div class="item-title">${item.name}</div>
                                </div>
                                <div class="item-subtitle">${item.artists.map((item) => $h`${item.name} `)}</div>
                            </div>
                        </a>
                    </li>
                    `)}
                </ul>
            </div>
            ` : $h ``}



            ${contentSpotify.albums != undefined ? $h`
            <div class="block-title">Albums</div>
            <div class="list media-list">
                <ul>
                    ${contentSpotify.albums.items.map((item) => $h`
                    <li>
                        <a href="#" class="item-link item-content">
                            <div class="item-media">
                                ${item.images.length > 0 ? $h`
                                <img src="${item.images[item.images.length -1].url}" class="album-cover" />
                                ` : $h`
                                <img src="./assets/icons/library_music_black_48dp.svg" width="45" />
                                `}
                            </div>
                            <div class="item-inner">
                                <div class="item-title-row">
                                    <div class="item-title">${item.name}</div>
                                </div>
                                <div class="item-subtitle">${item.artists.map((item) => $h`${item.name} `)}</div>
                            </div>
                        </a>
                    </li>
                    `)}
                </ul>
            </div>
            ` : $h ``}

            ${contentSpotify.artists != undefined ? $h`
            <div class="block-title">Artists</div>
            <div class="list media-list">
                <ul>
                    ${contentSpotify.artists.items.map((item) => $h`
                    <li>
                        <a href="#" class="item-link item-content">
                            <div class="item-media">
                                ${item.images.length > 0 ? $h`
                                <img src="${item.images[item.images.length -1].url}" class="artist-cover" />
                                ` : $h`
                                <img src="./assets/icons/face_black_48dp.svg" width="45" />
                                `}
                            </div>
                            <div class="item-inner">
                                <div class="item-title-row">
                                    <div class="item-title">${item.name}</div>
                                </div>
                            </div>
                        </a>
                    </li>
                    `)}
                </ul>
            </div>
            ` : $h ``}


            ${contentSpotify.playlists != undefined ? $h`
            <div class="block-title">Playlists</div>
            <div class="list media-list">
                <ul>
                    ${contentSpotify.playlists.items.map((item) => $h`
                    ${item != undefined ? $h`
                    <li>
                        <a href="#" class="item-link item-content">
                            <div class="item-media">
                                ${item.images.length > 0 ? $h`
                                <img src="${item.images[item.images.length -1].url}" class="playlist-cover" />
                                ` : $h`
                                <img src="./assets/icons/queue_music_black_48dp.svg" width="45" />
                                `}
                            </div>
                            <div class="item-inner">
                                <div class="item-title-row">
                                    <div class="item-title">${item.name}</div>
                                </div>
                                <div class="item-subtitle">${item.owner.display_name}</div>

                            </div>
                        </a>
                    </li>
                    ` : $h ``}
                    `)}
                </ul>
            </div>
            ` : $h ``}


        </div>
    </div>
</template>
<style scoped>
    .chip-block {
        margin: 10px 0px;
    }

    .chip-slide {
        width: auto;
    }

    .result-block {
        margin-top: 0;
    }

    .button-round {
        text-transform: capitalize;
    }

    .track-cover {
        background-image: url('./assets/icons/audiotrack_black_48dp.svg');
        width: 45px;
    }

    .album-cover {
        background-image: url('./assets/icons/library_music_black_48dp.svg');
        width: 45px;
    }

    .artist-cover {
        background-image: url('./assets/icons/face_black_48dp.svg');
        width: 45px;
    }

    .playlist-cover {
        background-image: url('./assets/icons/queue_music_black_48dp.svg');
        width: 45px;
    }
</style>
<script>
    export default (props, { $f7, $on, $update, $store }) => {
        let searchbar;
        $on('pageInit', () => {
            searchbar = $f7.searchbar.create({
                el: '.searchbar',
                customSearch: true,
                on: {
                    search(sb, query, previousQuery) {
                        if (query != "")
                            loadContent();
                    },
                    clear() {
                        contentSpotify = {}
                        $update();
                    }
                }
            });

            $f7.swiper.create('.chip-swiper', {
                speed: 400,
                spaceBetween: 10,
                loop: false,
                slidesPerView: 'auto',
                observer: true
            });
        })

        let contentSpotify = {};
        let contentLoading = false;
        const spotify = $store.getters.spotifyApi.value;
        let filter = {
            all: {
                active: true,
                name: 'All'
            },
            artists: {
                active: true,
                name: 'Artists'
            },
            albums: {
                active: true,
                name: 'Albums'
            },
            tracks: {
                active: true,
                name: 'Songs'
            },
            playlists: {
                active: true,
                name: 'Playlists'
            }
        }

        const changeChip = (e) => {
            let clickedChip;
            if (e.path == undefined) {
                clickedChip = e.srcElement.innerText;
            } else {
                clickedChip = e.path[0].innerText;
            }


            for (let key in filter) {
                filter[key].active = false;
            }

            for (let key in filter) {
                if (clickedChip == 'All') {
                    filter[key].active = true;
                }
                if (clickedChip == filter[key].name) {
                    filter[key].active = true;
                }
            }

            if (searchbar.query != "")
                loadContent(clickedChip);

            $update();
        }

        const loadContent = (filterName) => {
            let searchQuery = searchbar.query;

            if (filter.all.active) {
                getAllSearch(searchQuery, ["album", "artist", "playlist", "track"], { limit: 3 });
                return;
            }

            if (filter.tracks.active) {
                getAllSearch(searchQuery, ["track"], { limit: 20 });
                return;
            }

            if (filter.albums.active) {
                getAllSearch(searchQuery, ["album"], { limit: 20 });
                return;
            }

            if (filter.artists.active) {
                getAllSearch(searchQuery, ["artist"], { limit: 20 });
                return;
            }

            if (filter.playlists.active) {
                getAllSearch(searchQuery, ["playlist"], { limit: 20 });
                return;
            }
        }

        const getAllSearch = (searchText, filter, options) => {
            contentLoading = true;
            $update();
            spotify
                .search(searchText, filter, options)
                .then(
                    function (data) {
                        contentLoading = false;
                        contentSpotify = data;

                        console.log(data)
                        $update()
                    },
                    function (err) {
                        console.error(err);
                        contentLoading = false;
                    }
                );
        }

        return $render;
    }

</script>