<template>
    <div class="page">
        <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner sliding">
                <div class="left">
                    <a href="#" class="link back">
                        <i class="icon icon-back"></i>
                        <span class="if-not-md">Back</span>
                    </a>
                </div>
                <div class="title">${track.name}</div>
                <div class="right">
                    <a href="#" class="link icon-only" @click="${showAvaibleMarkets}">
                        <i class="icon material-icons">language</i>
                    </a>
                </div>
            </div>
        </div>
        <div class="page-content">
            ${album.images.length > 1 ? $h`
            <div class="previewImageBlock">
                <img src="${album.images[1].url}" width="200px" class="imageBlur" />
                <img src="${album.images[1].url}" width="200px" class="imageNoBlur" />
            </div>
            ` : $h`
            `}
            <div class="block block-strong contentBlock">
                ${track.preview_url && $h`
                <button
                    class="button button-large button-fill button-preloader ${previewLoading ? 'button-loading' : ''}"
                    @click=${playTrack}>
                    <span class="preloader"></span>
                    <span>${playButton}</span>
                </button>
                `}
                <p>Requested content not found.</p>
            </div>
        </div>
    </div>
</template>
<style scoped>
    .marketItem {
        width: min-content;
    }

    .marketRow>div {
        width: fit-content !important;
        margin: 5px !important;
    }

    .sheet-modal-inner {
        overflow-y: scroll !important;
    }

    .previewImageBlock {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        z-index: 0;
    }

    .previewImageBlock>img {
        display: block;
        object-fit: cover;
        object-position: center;
    }

    .contentBlock {
        background: var(--f7-page-bg-color);
        position: relative;
        z-index: 1;
        height: 1000px;
        margin-top: 0;
    }

    .imageBlur {
        -webkit-filter: blur(20px);
        -moz-filter: blur(20px);
        -o-filter: blur(20px);
        -ms-filter: blur(20px);
        filter: blur(20px);
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        padding: 30px;
    }

    .imageNoBlur {
        padding: 30px;
        position: inherit;
        margin-left: auto;
        margin-right: auto;
    }
</style>
<script>
    import { countryCodeEmoji } from 'country-code-emoji';

    export default (props, { $, $f7, $update, $on }) => {
        let previewLoading = false;
        var regExRegion = /^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|\d{3}))?((?:-(?:[\da-z]{5,8}|\d[\da-z]{3}))*)?((?:-[\da-wy-z](?:-[\da-z]{2,8})+)*)?(-x(?:-[\da-z]{1,8})+)?$|^(x(?:-[\da-z]{1,8})+)$/i;
        let region = regExRegion.exec(navigator.language)[5];
        console.log(region)
        const track = props.track;
        const album = track.album;
        let player;
        let playButton = "Play";
        console.log(track);

        const createPlayer = () => {
            player = new Audio(track.preview_url);
            player.addEventListener('loadstart', function () {
                previewLoading = true;
                $update();
            });
            player.addEventListener('canplaythrough', function () {
                previewLoading = false;
                player.play();
                $update();
            });
            player.addEventListener('ended', function () {
                playButton = "Play";
                $update();
            });
        }

        const showAvaibleMarkets = () => {
            const emojis = track.available_markets.map(countryCodeEmoji);
            const text = track.available_markets;
            let fullText = '';

            let avaibleText = ''
            if (text.includes(region)) {
                avaibleText = `<div class="block block-strong"><div class="block-inner"></div><p class="no-margin-top">This track is avaible in your region "${region}". üòÅ</p></div>`;
            }

            for (let i = 0; i < text.length; i++) {
                fullText = `${fullText}<div class="col"><div class="marketItem">${emojis[i]} ${text[i]}</div></div>`;
            }

            var dynamicSheet = $f7.sheet.create({
                content: `
          <div class="sheet-modal">
            <div class="toolbar">
              <div class="toolbar-inner">
                <div class="left"></div>
                <div class="right">
                  <a class="link sheet-close">Done</a>
                </div>
              </div>
            </div>
            <div class="sheet-modal-inner">
                ${avaibleText}
              <div class="block">
                <div class="row marketRow">
                    
          ${fullText}

        </div>
              </div>
            </div>
          </div>
        `
            });

            dynamicSheet.open();

        }

        const playTrack = () => {
            if (!player)
                createPlayer();

            if (!previewLoading) {
                if (player.paused) {
                    playButton = "Pause";
                    $update();
                    player.play();
                } else {
                    playButton = "Play";
                    $update();
                    player.pause();
                }
            }
        }

        $on('pageBeforeOut', (e, page) => {
            if (player)
                player.pause();
        });

        return $render;
    };
</script>